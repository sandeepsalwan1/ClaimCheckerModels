import cvSetsK5 from './data/cvSetsK5.json';
import cvSetsK7 from './data/cvSetsK7.json';
import raw from './data/iris.json';
import getNumericalClasses from './utilities/getNumericalClasses';
const dataset = raw;
export function getDataset() {
    return dataset.slice();
}
export function getNumbers() {
    return dataset.map((sample) => sample.slice(0, 4));
}
export function getClasses() {
    return dataset.map((sample) => sample[4]);
}
export function getClassesAsNumber() {
    const classes = dataset.map((sample) => sample[4]);
    return getNumericalClasses(classes);
}
export function getDistinctClasses() {
    return ['setosa', 'versicolor', 'virginica'];
}
export function getCrossValidationSets(k, options = {}) {
    const { idx = 0, by = 'folds' } = options;
    if (k !== 7 && k !== 5) {
        throw new Error(`k must be 7 or 5`);
    }
    const res = k === 7 ? cvSetsK7[idx] : k === 5 ? cvSetsK5[idx] : [];
    if (by === 'folds') {
        return res;
    }
    else if (by === 'trainTest') {
        const folds = [];
        for (const trainIndex of res) {
            const testIndex = [];
            for (let j = 0; j < 150; j++) {
                if (!trainIndex.includes(j)) {
                    testIndex.push(j);
                }
            }
            folds.push({ testIndex, trainIndex });
        }
        return folds;
    }
    else {
        throw new Error(`unknown "by" option: ${by}`);
    }
}
//# sourceMappingURL=index.js.map